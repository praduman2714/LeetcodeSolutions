class Solution {
    public int maxProfit(int[] prices) {
        int[][] dp = new int[prices.length][5];
        for(int[] val : dp)Arrays.fill(val, -1);
        
        return helper(0, 0, prices, dp);
    }
    
    public int helper(int pos, int buy , int[] prices, int[][] dp){
        if(pos == prices.length || buy == 4) return 0;
        if(dp[pos][buy] != -1) return dp[pos][buy];
        
        int profit = 0;
        if(buy % 2 == 0){
            profit = Math.max((-prices[pos] + helper(pos+1, buy+1, prices, dp)) ,
                             helper(pos+1, buy, prices, dp));
        }else{
            profit = Math.max((prices[pos] + helper(pos+1, buy+1, prices, dp)) ,
                             helper(pos + 1, buy, prices, dp));
        }
        return dp[pos][buy] = profit;
    }
}